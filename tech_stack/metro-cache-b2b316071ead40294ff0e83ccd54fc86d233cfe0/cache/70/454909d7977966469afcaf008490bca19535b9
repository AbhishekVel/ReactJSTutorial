__d(function (global, require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Input = undefined;
  var _jsxFileName = "/home/abhishek/Desktop/react-native-learning/tech_stack/src/components/common/Input.js";

  var _react = require(_dependencyMap[0], "react");

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = require(_dependencyMap[1], "react-native");

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  var Input = function Input(_ref) {
    var secureTextEntry = _ref.secureTextEntry,
        placeholder = _ref.placeholder,
        label = _ref.label,
        value = _ref.value,
        onChangeText = _ref.onChangeText;
    var inputStyle = styles.inputStyle,
        labelStyle = styles.labelStyle,
        containerStyle = styles.containerStyle;
    return _react2.default.createElement(
      _reactNative.View,
      {
        style: containerStyle,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 7
        }
      },
      _react2.default.createElement(
        _reactNative.Text,
        {
          style: labelStyle,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 8
          }
        },
        label
      ),
      _react2.default.createElement(_reactNative.TextInput, {
        secureTextEntry: secureTextEntry,
        placeholder: placeholder,
        underlineColorAndroid: "transparent",
        autoCorrect: false,
        style: inputStyle,
        value: value,
        onChangeText: onChangeText,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 9
        }
      })
    );
  };

  var styles = {
    inputStyle: {
      color: '#000',
      paddingRight: 5,
      paddingLeft: 5,
      fontSize: 18,
      lineHeight: 23,
      flex: 2
    },
    labelStyle: {
      fontSize: 18,
      paddingLeft: 20,
      flex: 1
    },
    containerStyle: {
      height: 40,
      flex: 1,
      flexDirection: 'row',
      alignItems: 'center'
    }
  };
  exports.Input = Input;
});